unit dmConexao;

interface

uses
  System.SysUtils, System.Classes, FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Param, FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf,
  FireDAC.DApt.Intf, FireDAC.Stan.Async, FireDAC.DApt, Data.DB,
  FireDAC.Comp.DataSet, FireDAC.Comp.Client, FireDAC.UI.Intf, FireDAC.Stan.Def,
  FireDAC.Stan.Pool, FireDAC.Phys, FireDAC.VCLUI.Wait, FireDAC.Phys.MySQL,
  FireDAC.Phys.MySQLDef;

type
  TdtmConexao = class(TDataModule)
    FQuery: TFDQuery;
    FDConnection: TFDConnection;
    FDPhysMySQLDriverLink1: TFDPhysMySQLDriverLink;
    DataSource1: TDataSource;
    FDTransaction1: TFDTransaction;
    DataSource2: TDataSource;
    conexao2: TFDConnection;
    function ConectarBanco: Boolean;
    procedure DataModuleCreate(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  dtmConexao: TdtmConexao;

implementation

{%CLASSGROUP 'Vcl.Controls.TControl'}

{$R *.dfm}

function TdtmConexao.ConectarBanco: Boolean;
begin
  result := False;
  try
    conexao2.Connected := True;
    result := conexao2.Connected;
  except
    on E: Exception do
  end;

end;

procedure TdtmConexao.DataModuleCreate(Sender: TObject);
begin
  ConectarBanco;
end;

end.
